"""
    Group 40 - Malware Sandbox
        Swinburne University of Technology
        Name: MalwareInsight Histogram
        Author: Ahmed Elmi
        Date: 2/10/2023

        
        Description:

"""



import csv
import os
import matplotlib.pyplot as plt
from collections import defaultdict

def plot_process_execution_histogram(input_file):
    process_counts = defaultdict(int)

    with open(input_file, 'r', newline='', encoding='utf-8') as csv_file:
        reader = csv.reader(csv_file)
        headers = next(reader)  # Read the header row

        # Dynamically identify the "Process Name" and "Operation" columns
        process_name_index = None
        operation_index = None
        for i, header in enumerate(headers):
            if "Process Name" in header:
                process_name_index = i
            elif "Operation" in header:
                operation_index = i

        if process_name_index is None or operation_index is None:
            print("Error: 'Process Name' or 'Operation' column not found in the CSV file.")
            return

        for row in reader:
            operation = row[operation_index].strip()
            
            # Check if the operation is "Load Image"
            if operation == "Load Image":
                current_process_name = row[process_name_index].strip()
                process_counts[current_process_name] += 1

    # Extract the process names and their counts
    processes = list(process_counts.keys())
    counts = list(process_counts.values())

    # Create a histogram
    plt.figure(figsize=(10, 6))
    plt.bar(processes, counts, color='skyblue')
    plt.xlabel('Process Name')
    plt.ylabel('Frequency')
    plt.title('Process Execution Histogram (Load Image)')
    plt.xticks(rotation=90)
    plt.grid(axis='y', alpha=0.75)
    plt.tight_layout()

    # Save the chart as an image
    histogram_image_path = r'reports\load_image_histogram.png'
    plt.savefig(histogram_image_path)


# Example usage:
input_file = r'reports\monitor_report_edited.csv'
plot_process_execution_histogram(input_file)
