import pyshark
import collections
import matplotlib.pyplot as plt
import os
from tkinter import filedialog
from tkinter import Tk
import subprocess

# Automatically find the .pcap file in the 'reports' folder
reports_folder = "reports"
pcap_file_path = None
for filename in os.listdir(reports_folder):
    if filename.endswith(".pcap"):
        pcap_file_path = os.path.join(reports_folder, filename)
        break

if not pcap_file_path:
    print("No .pcap file found in the 'reports' folder. Exiting.")
    exit()

fixed_pcap_file_path = "fixed.pcap"
try:
    # Run editcap to fix the cut short .pcap file
    subprocess.run(["C:\Program Files\Wireshark\editcap.exe", "-F", "pcap", pcap_file_path, fixed_pcap_file_path], check=True)
except subprocess.CalledProcessError as e:
    print(f"Error fixing the .pcap file: {e}")
    exit()

cap = pyshark.FileCapture(fixed_pcap_file_path)
protocolList = []
try:
    for packet in cap:
        protocol = packet.highest_layer if hasattr(packet, "highest_layer") else "Unknown"
        protocolList.append(protocol)
except Exception as e:
    print(f"Error reading packets from the .pcap file: {e}")
    exit()

cap.close()

counter = collections.Counter(protocolList)

# Extract the protocol names and frequencies
protocols = list(counter.keys())
frequencies = list(counter.values())

# Generate the pie chart
plt.pie(frequencies, labels=protocols, autopct='%1.1f%%', startangle=90)
plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle
plt.title("Protocol Distribution")

filename = "ProtocolPieChart.png"

# Get the directory of the selected .pcap file
save_dir = os.path.dirname(pcap_file_path)

try:
    plt.savefig(os.path.join(save_dir, filename))
    print("Pie chart is generated in the same directory as the .pcap file.")
    print("File saved at:", os.path.join(save_dir, filename))
except IOError as e:
    print(f"Error saving the pie chart: {e}")

# Delete the fixed .pcap file
os.remove(fixed_pcap_file_path)
