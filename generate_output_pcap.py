import pyshark
import pandas as pd
import os
import matplotlib.pyplot as plt

reports_folder = "reports"
pcap_file_path = None
for filename in os.listdir(reports_folder):
    if filename.endswith(".pcap"):
        pcap_file_path = os.path.join(reports_folder, filename)
        break

if not pcap_file_path:
    print("No .pcap file found in the 'reports' folder. Exiting.")
    exit()

def read_pcap_to_table(pcap_file_path):
    # Check if the file exists
    if not os.path.exists(pcap_file_path):
        print("File does not exist")
        return
    
    # Read the pcap file using pyshark
    cap = pyshark.FileCapture(pcap_file_path)
    
    # Initialize an empty list to store packet data
    packet_data = []
    
    # Loop through each packet in the capture file
    for packet in cap:
        try:
            timestamp = packet.sniff_time
            packet_length = packet.length
            src_ip = packet.ip.src
            dst_ip = packet.ip.dst
            protocol = packet.transport_layer
        except AttributeError:
           
            continue

        # Create a dictionary with the packet data and append it to the list
        packet_dict = {
            'Timestamp': timestamp,
            'Packet Length': packet_length,
            'Source IP': src_ip,
            'Destination IP': dst_ip,
            'Protocol': protocol
        }
        packet_data.append(packet_dict)
    
    # Create a Pandas DataFrame from the list of packet data
    df = pd.DataFrame(packet_data)
    
    # Create a table plot using matplotlib
    fig, ax = plt.subplots(figsize=(12, 8))  # Set the figure size
    ax.axis('tight')
    ax.axis('off')
    
    # Position the table within the plot to make room for headers
    table = ax.table(cellText=df.values, colLabels=df.columns, cellLoc='center', loc='center', colColours=['#f5f5f5']*df.shape[1])
    table.set_fontsize(10)
    table.scale(1.0, 1.5)
    table.auto_set_column_width(col=list(range(len(df.columns))))  # Set the column width automatically
    
    # Show the plot
    plt.show()

# Call the function to read the pcap file and display it as a visual table
read_pcap_to_table(pcap_file_path)
