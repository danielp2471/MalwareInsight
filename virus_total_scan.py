"""
    Group 40 - Malware Sandbox
        Swinburne University of Technology
        Name: MalwareInsight Report Generation script
        Author: Daniel Pesavento
        Date: 1/08/2023

        
        Description:
        Interacts with a generated API key for the VirusTotal API, which intakes .ZIP files and scans it across their system. The main functionality of this script is to:
        1. Intake a selected file, supply a password for the request if needed, and retrieves an analysis ID from the VirusTotal API.
        2. Utilizes this analysis ID to create another request which gets the results of the generated VirusTotal API to retrieve the contents.
        These details which include AV detection results, md5 and sha hashes, which are then compiled into the final report as part of file generation in the MalwareInsight program.
"""

import requests
import tkinter as tk
from tkinter import filedialog
import time
import json

# Replace YOUR_API_KEY with your actual VirusTotal API key
API_KEY = "fba00fa5c0c9ba2cd1d7c9ee909d72166119136fe90c99b66cab27be3d288e1f"

def get_file_path():
    root = tk.Tk()
    root.withdraw()
    file_path = filedialog.askopenfilename()
    return file_path

def scan_file(file_path, password):
    url = "https://www.virustotal.com/api/v3/files"
    headers = {"x-apikey": API_KEY}
    files = {"file": (file_path, open(file_path, "rb"), "application/x-zip-compressed")}
    payload = {"password": password}

    print("Scanning the file on VirusTotal...")
    response = requests.post(url, data=payload, files=files, headers=headers)
    response_data = response.json()

    if "error" in response_data:
        print(f"Error: {response_data['error']['message']}")
        return None

    analysis_id = response_data["data"]["id"]
    print(f"File scan completed! Analysis ID: {analysis_id}")
    return analysis_id

def get_analysis_report(analysis_id):
    url = f"https://www.virustotal.com/api/v3/analyses/{analysis_id}"
    headers = {"x-apikey": API_KEY}
    print("Retrieiving analysis report, this may take some time...")
    while True:
        time.sleep(20)
        print("Please wait...")
        response = requests.get(url, headers=headers)
        response_data = response.json()

        if response_data["data"]["attributes"]["status"] == "completed":
            return response_data

def save_to_txt(data, txt_file):
    with open(txt_file, 'w') as f:
        json.dump(data, f, indent=4)

def main():
    file_path = get_file_path()
    password = input("Enter the password for the password-protected .zip file: ")
    analysis_id = scan_file(file_path, password)

    if analysis_id:
        report = get_analysis_report(analysis_id)
        txt_file = "virustotal_results.txt"
        output = f".\\reports\\{txt_file}"
        save_to_txt(report, output)

if __name__ == "__main__":
    main()
